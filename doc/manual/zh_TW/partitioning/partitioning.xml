<!-- Start of file partitioning/partitioning.xml -->

<appendix id="partitioning">
<title
>為 Debian 分割磁區</title>


<!-- Start of file partitioning/sizing.xml -->


 <sect1 id="partition-sizing">
 <title
>決定 Debian 磁區及大小</title>
<para
>最小化情況下，GNU/Linux 需要一個分割區。您可以有一個包含整個作業系統，應用程式以及您個人檔案的分割區。大多數人認為另建一個的置換分割區是有必要的，雖然嚴格來說它並不正確。 <quote
>Swap</quote
> 是一個作業系統用的空白空間，允許系統使用磁碟來提供 <quote
>虛擬記憶體</quote
>。通過置換空間至一個分離的分割區，Linux 可以有效地使用它。強迫 Linux 使用一個一般檔案作為置換空間也是可行的，但是並不建議這種做法。 </para
><para
>大多數人選擇給 GNU/Linu 比最小化更多的分區。有兩個原因可能使您願意把檔案系統打散放置到一些較小的分區上。第一個問題是安全性，如果檔案系統出現了問題，一般來說只有一個磁區會受到影響。因此，您只需要更換(來自於您小心維護的備份)一個磁區。在最小化階段，您應該考慮建立所謂的 <quote
>根分割區</quote
>。它含有最主要的系統組件。如果其它分割區出現了問題，您仍可以進入至 GNU/Linux 來修復系統。這樣您可以不必從頭重新安裝系統。 </para
><para
>第二個理由對商業設置來說更重要，但它實際上取決於您機器的使用。比如，一個郵件伺服器接受到很多垃圾郵件會很快填滿一個分割區，如果您建立 <filename
>/var/mail</filename
> 在一個分離的分割區上面，大多數系統在您得到太多垃圾郵件的情況下會繼續工作。 </para
><para
>使用更多分割區的唯一缺點是很難預先知道您將來的需求。如果您建立了一個太小的分割區，則您可能需要重新安裝系統或者不停地移動資料以增加分割區空間。除此之外，如果您建立的分割區過大，您將浪費一些可以用在別的地方的空間。硬碟容量目前很便宜，但是為什麼要浪費呢？ </para>
 </sect1>
<!--   End of file partitioning/sizing.xml -->

<!-- Start of file partitioning/tree.xml -->


 <sect1 id="directory-tree">
 <title
>目錄樹</title>
<para
>&debian; 依照 <ulink url="&url-fhs-home;"
>檔案系統層次標準 (Filesystem Hierarchy Standard)</ulink
> 為目錄以及檔案命名。這個標準允許使用者以及軟體程式預測檔案及目錄的位置。根層次目錄只是簡單表現為 <filename
>/</filename
>。在根層次，所有的 Debian 系統包括這些目錄： <informaltable
> <tgroup cols="2">
<thead>
<row>
  <entry
>目錄</entry
><entry
>內容</entry>
</row>
</thead>

<tbody>
<row>
  <entry
><filename
>bin</filename
></entry>
  <entry
>基礎命令執行檔案</entry>
</row
><row>
  <entry
><filename
>boot</filename
></entry>
  <entry
>boot loader的靜態鏈結檔案</entry>
</row
><row>
  <entry
><filename
>dev</filename
></entry>
  <entry
>裝置檔案</entry>
</row
><row>
  <entry
><filename
>etc</filename
></entry>
  <entry
>主機特定的系統設定</entry>
</row
><row>
  <entry
><filename
>home</filename
></entry>
  <entry
>使用者家目錄</entry>
</row
><row>
  <entry
><filename
>lib</filename
></entry>
  <entry
>基本共享程式庫以及核心單元</entry>
</row
><row>
  <entry
><filename
>media</filename
></entry>
  <entry
>包含移動媒介的掛載點</entry>
</row
><row>
  <entry
><filename
>mnt</filename
></entry>
  <entry
>暫時掛載檔案系統的掛載點</entry>
</row
><row>
  <entry
><filename
>proc</filename
></entry>
  <entry
>系統資訊的虛擬目錄(2.4 和 2.6 內核)</entry>
</row
><row>
  <entry
><filename
>root</filename
></entry>
  <entry
>根使用者的家目錄</entry>
</row
><row>
  <entry
><filename
>sbin</filename
></entry>
  <entry
>基本的系統執行檔案</entry>
</row
><row>
  <entry
><filename
>sys</filename
></entry>
  <entry
>系統資訊的虛擬目錄(2.6 內核)</entry>
</row
><row>
  <entry
><filename
>tmp</filename
></entry>
  <entry
>暫存檔</entry>
</row
><row>
  <entry
><filename
>usr</filename
></entry>
  <entry
>第二層次</entry>
</row
><row>
  <entry
><filename
>var</filename
></entry>
  <entry
>變動資料</entry>
</row
><row>
  <entry
><filename
>opt</filename
></entry>
  <entry
>附加的應用程式軟體套件</entry>
</row>
</tbody
></tgroup
></informaltable>
</para>

<para
>下面列出關於目錄和分割區的重要考量。要注意硬碟的使用隨系統設定和特定用途有很大變化。這裡的建議是一般導引，提供分割區的基本分割方式。 </para>
<itemizedlist>
<listitem
><para
>根分割區 <filename
>/</filename
> 必須包含 <filename
>/etc</filename
>、<filename
>/bin</filename
>、<filename
>/sbin</filename
>、<filename
>/lib</filename
> 以及 <filename
>/dev</filename
>，否則您將不能開機。 root 分區通常需要 150&ndash;250MB 大小空間。 </para
></listitem>
<listitem
><para
><filename
>/usr</filename
>：包含所有的使用者程式(<filename
>/usr/bin</filename
>)、函式庫(<filename
>/usr/lib</filename
>)、文件檔案(<filename
>/usr/share/doc</filename
>)，等等。這是檔案系統耗費最多的空間的部分。您至少需要 500MB 磁碟空間。總容量與您要安裝的軟體套件數量和類型成正比。大的工作站或伺服器安裝需要 4-6 GB。 </para
></listitem>
<listitem
><para
><filename
>/var</filename
>：所有的可變資料，如新的文章，電子郵件，網站，資料庫，套件系統快取等等，將被置入這個目錄下。這個目錄的大小取決於您對系統的使用，但是對大多數人來說主要取決於套件管理工具的額外負擔。如果您準備做完整的安裝，包含 Debian 提供的所有程式，為<filename
>/var</filename
> 保留 2 或 3GB 的空間應該滿足需求。如果您準備分開安裝(也就是說，安裝服務程式和工具，然後是文本處理工具，接著是 X，...)，您可以在 <filename
>/var</filename
> 下預留 300&mdash;500 MB。如果硬碟空間不足，而且您不打算做主要的系統升級，您甚至可以配置更少的空間，大概約 30-40MB </para
></listitem>
<listitem
><para
><filename
>/tmp</filename
>: 程式製造出的暫存檔大都存到這個目錄，通常 40&ndash;100 MB 便足夠。一些應用程式 &mdash; 包括檔案處理器，CD/DVD 製作工具，和多媒體軟體 &mdash; 可能會使用 <filename
>/tmp</filename
> 臨時儲存映像檔。如果您要使用這些程式，應該依據需要調整 <filename
>/tmp</filename
> 目錄的大小。 </para
></listitem>
<listitem
><para
><filename
>/home</filename
>：每個使用者將他的個人資料放置在這個目錄的子目錄下。其大小取決於有多少使用者將使用系統和有什麼文件放在他們的目錄下。根據您計畫的使用量，您應該為每個使用者預留 100MB 空間，不過這個值應該依照您的需求設定。假如您的家目錄計畫保存大量的多媒體檔案(MP3，電影)，您該預留更多的空間。 </para
></listitem>
</itemizedlist>

 </sect1>
<!--   End of file partitioning/tree.xml -->

<!-- Start of file partitioning/schemes.xml -->


 <sect1>
 <title
>建議的分割方案</title>
<para
>對於新使用者，個人 Debian 系統，家庭系統以及其它單用戶設定來說，一個單一<filename
>/</filename
> 分割區(加上置換區)可能是最容易簡單的方式。但是如果您的分割區大於6GB，請選擇 ext3 作為您的分割區類型。ext2 分割區需要週期性的檔案系統完整性檢查，而且當分割區很大的時候，這個特性將導致開機的延遲。 </para
><para
>對於多使用者系統或者有很多磁碟空間的系統，最好放置 <filename
>/usr</filename
>, <filename
>/var</filename
>, <filename
>/tmp</filename
>, 以及 <filename
>/home</filename
> 到他們自己的分割區空間以和 <filename
>/</filename
> 分割區區隔開來。 </para
><para
>若您打算安裝許多不是 Debian 分發版本的程式時，您或許需要另一個獨立的 <filename
>/usr/local</filename
> 分割區。如果您的機器是一個小的郵件伺服器，您也許需要為 <filename
>/var/mail</filename
> 建立一個獨立的分割區。通常我們會放置 <filename
>/tmp</filename
> 至獨立的分割區，大小大約20至 50MB 。如果您配置一個伺服器帶有許多使用者帳戶，通常需要一個獨立、大的 <filename
>/home</filename
> 分割區。一般來說，每台電腦的分割區狀況都有所不同，這取決於他們的用途。 </para
><para
>對於非常複雜的系統來說，您應該閱讀 <ulink url="&url-multidisk-howto;"
> Multi Disk HOWTO</ulink
>。其中包含了很多對 ISP 以及設定伺服器的用戶來說非常用的深入資訊。 </para
><para
>至於在置換分割區大小的問題，不同的人有不同的觀點。我們的建議是使用和系統記憶體大小相同的置換分割區。在大多數情況下它不應該小於 16MB ，當然也有一些例外。如果您正嘗試在 256MB 記憶體的機器上同時解決10000 個聯立方程式，您可能需要 1G (或者更多)的置換分割區。 </para
><para arch="m68k"
>另外一個方面，Atari Falcons 以及 Macs 對置換感到很痛苦，因此建立一個大的置換分割區不如盡可能獲得更多的 RAM 。 </para
><para
>在 32 位元結構(i386, m68k, 32位 SPARC 以及 PowerPC)下，置換分割區的最大尺寸是 2GB。這應該滿足任何安裝情況。但是如果您的置換分割區需求非常大，您應該嘗試將置換分割區分至不同磁碟中(這也叫做 <quote
>spindles</quote
> )，如果可能的話，甚至是在不同的 SCSI 或者 IDE 通道。核心將在多個置換空間平衡用量來達到更好的性能。 </para
><para
>例如，一個較老的機器可能具有 32MB 記憶體以及一個在 <filename
>/dev/hda</filename
>上 1.7GB 的 IDE 磁碟。 其他作業系統寫在 <filename
>/dev/hda1</filename
> 上，此分區大小為 500MB ，一個 32MB 置換分割區作為 <filename
>/dev/hda3</filename
>以及一個 1.2GB 分割區 <filename
>/dev/hda2</filename
>)作為 Linux 分割區。 </para
><para
>對於不同工作所需要多大的空間的概念，您也許對於系統安裝完畢後加入的安裝感興趣，請參照 <xref linkend="tasksel-size-list"/>。 </para>

 </sect1>
<!--   End of file partitioning/schemes.xml -->

<!-- Start of file partitioning/device-names.xml -->


 <sect1 id="device-names">
 <title
>Linux 裡的裝置名稱</title>
<para
>Linux 磁碟以及分割區名稱可能和其它的作業系統有所不同。當您建立以及掛載分割區時，必須先知道 Linux 所使用的設備名稱。以下是基本的命名規則： </para>
<itemizedlist arch="not-s390">
<listitem
><para
>第一個軟碟機被命名為 <filename
>/dev/fd0</filename
>。 </para
></listitem>
<listitem
><para
>第二個軟碟機被命名為 <filename
>/dev/fd1</filename
>。 </para
></listitem>
<listitem
><para
>第一個 SCSI 磁碟 (SCSI ID 反向地址) 被命名為 <filename
>/dev/sda</filename
>。 </para
></listitem>
<listitem
><para
>第二個 SCSI 磁碟 (反向地址) 被命名為 <filename
>/dev/sdb</filename
>，等等。 </para
></listitem>
<listitem
><para
>第一個 SCSI 光碟機被命名為 <filename
>/dev/scd0</filename
>，也叫 <filename
>/dev/sr0</filename
>。 </para
></listitem>
<listitem
><para
>主 IDE 控制器下的主磁碟被命名為 <filename
>/dev/hda</filename
>。 </para
></listitem>
<listitem
><para
>主 IDE 控制器下的從磁碟被命名為 <filename
>/dev/hdb</filename
>。 </para
></listitem>
<listitem
><para
>第二個控制器的主磁碟和從磁碟分別被叫做 <filename
>/dev/hdc</filename
> 以及  <filename
>/dev/hdd</filename
> ，較新的 IDE 控制器實際上有兩個通道，扮演著兩個控制器的角色。 <phrase arch="m68k"
> 字母可能和 mac 程式 pdisk 顯示的不同。(在 pdisk 上的 <filename
>/dev/hdc</filename
> 可能在 Debian 中顯示為 <filename
>/dev/hda</filename
>)。 </phrase
> </para
></listitem>

<listitem arch="i386"
><para
>第一個 XT 磁碟會被命名為 <filename
>/dev/xda</filename
>。 </para
></listitem>
<listitem arch="i386"
><para
>第二個 XT 磁碟會被命名為 <filename
>/dev/xdb</filename
>。 </para
></listitem>
<listitem arch="m68k"
><para
>第一個 ACSI 裝置被命名為 <filename
>/dev/ada</filename
> ，第二個則是 <filename
>/dev/adb</filename
>。 </para
></listitem>
</itemizedlist>

<itemizedlist arch="s390">
<listitem
><para
>第一個 DASD 裝置被命名為 <filename
>/dev/dasda</filename
>。 </para
></listitem>
<listitem
><para
>第二個 DASD 裝置被命名為 <filename
>/dev/dasdb</filename
>，等等。 </para
></listitem>
</itemizedlist>

<para arch="not-s390"
>每個磁碟分割區的名字在磁碟名稱後面附加一個十進制數字： <filename
>sda1</filename
> 以及 <filename
>sda2</filename
> 表示系統裡第一個 SCSI 磁碟的第一個及第二個分割區。 </para
><para arch="not-s390"
>這裡有個實際的例子。假設您有一個系統帶有兩個 SCSI 磁碟，一個 SCSI 位址是 2 而另外一個是 4。第一個磁碟(在 2 上)會被命名為 <filename
>sda</filename
>而第二個是 <filename
>sdb</filename
>。如果 <filename
>sda</filename
> 磁碟有 3 個分割區，它們將被命名為 <filename
>sda1</filename
>，<filename
>sda2</filename
>，以及 <filename
>sda3</filename
>。 <filename
>sdb</filename
> 及其分割區亦是如此。 </para
><para arch="not-s390"
>注意如果您有兩個 SCSI 主機匯流排適配器 (控制器)，設備的順序可能會比較混亂。假設您知道磁碟模式以及/或者容量，最好的解決方案是觀察開機訊息。 </para
><para arch="i386"
>Linux 以主分割區為您的磁碟名稱再加上數字 1 到 4。例如，在第一個 IDE 磁碟上的第一個主分區是 <filename
>/dev/hda1</filename
>。邏輯分割區將會從數字 5 開始，因此在此磁碟的第一個邏輯分割區是 <filename
>/dev/hda5</filename
>。記住延伸分割區，意即含有邏輯分割區的主分割區本身將不可用。這個規則同樣適用於 SCSI 。 </para
><para arch="m68k"
>VMEbus 系統使用的 TEAC FC-1 SCSI 軟碟將被看成正常的 SCSI 磁碟。為了讓磁碟辨認更容易，安裝軟體將建立一個符號連結至合適的裝置並且稱為 <filename
>/dev/sfd0</filename
>。 </para
><para arch="sparc"
>Sun 磁碟分割區允許 8 個獨立的分割區(或者片)。第三個分割區通常(一般也是)<quote
>整個磁碟</quote
>分割區。這個分割區代表磁碟上所有的磁區，並且將被 boot loader (SILO 或者 SUN 的)使用。 </para
><para arch="s390"
>每個磁碟的分割區名字，是在磁碟名稱後面加一個十進制數字： <filename
>dasda1</filename
> 以及 <filename
>dasda2</filename
> 表示您系統上第一個 DASD 裝置的第一個以及第二個分區。 </para>
 </sect1>
<!--   End of file partitioning/device-names.xml -->

<!-- Start of file partitioning/partition-programs.xml -->

 <sect1 id="partition-programs">
 <title
>Debian 分割程式</title>
<para
>Debian 開發人員配置了幾種在不同硬碟及電腦架構上的分割區程式。下面是一個適合您的架構的程式列表。 </para>

<variablelist>

<varlistentry>
<term
><command
>partman</command
></term>
<listitem
><para
>這是我們建議的 Debian 分割區工具。這個小而全的工具可以修改分區大小，建立檔案系統 <phrase arch="i386"
>(在 Windows 下的說法是 <quote
>format</quote
>)</phrase
> 並將分區連結至掛載點。 </para
></listitem>
</varlistentry>

<varlistentry condition="fdisk.txt">
<term
><command
>fdisk</command
></term>
<listitem
><para
>最早的 Linux 磁碟分割區工具，對高手來說很好用。 </para
><para
>請注意如果您的機器上有一個既存 FreeBSD 分區。安裝核心將包括對這些分割區的支援，但是 <command
>fdisk</command
> 裝置名稱的表示方式可能有所不同(也可能不是)。請參照 <ulink url="&url-linux-freebsd;"
>Linux+FreeBSD HOWTO</ulink
> </para
></listitem>
</varlistentry>

<varlistentry condition="cfdisk.txt">
<term
><command
>cfdisk</command
></term>
<listitem
><para
>一個簡單易用，給其它人使用的是全螢幕磁碟分割區程式。 </para
><para
>請注意 <command
>cfdisk</command
> 完全不瞭解 FreeBSD 的分割區，而且裝置名稱也可能有所不同。 </para
></listitem>
</varlistentry>

<varlistentry condition="atari-fdisk.txt">
<term
><command
>atari-fdisk</command
></term>
<listitem
><para
>Atari-aware 版本的 <command
>fdisk</command
>。 </para
></listitem>
</varlistentry>

<varlistentry condition="amiga-fdisk.txt">
<term
><command
>amiga-fdisk</command
></term>
<listitem
><para
>Amiga-aware 版本的 <command
>fdisk</command
>。 </para
></listitem>
</varlistentry>

<varlistentry condition="mac-fdisk.txt">
<term
><command
>mac-fdisk</command
></term>
<listitem
><para
>Mac-aware 版本的 <command
>fdisk</command
>。 </para
></listitem>
</varlistentry>

<varlistentry condition="pmac-fdisk.txt">
<term
><command
>pmac-fdisk</command
></term>
<listitem
><para
>PowerMac版本的 <command
>fdisk</command
>，同時也用於 BVM 以及 Motorola VMEbus 系統。 </para
></listitem>
</varlistentry>

<varlistentry condition="fdasd.txt">
<term
><command
>fdasd</command
></term>
<listitem
><para
>&arch-title; <command
>fdisk</command
> 的版本; 請閱讀 <ulink url="fdasd.txt"
>fdasd 手冊</ulink
>或者 <ulink url="http://oss.software.ibm.com/developerworks/opensource/linux390/docu/l390dd08.pdf"
> Device Drivers and "
"Installation Commands</ulink
> 的第 13 章獲得詳細資訊。 </para
></listitem>
</varlistentry>
</variablelist>

<para
>當您選擇 <guimenuitem
>對硬碟進行分割</guimenuitem
> 時，有一程式預設會啟動。如果預設啟動的那個不是您所想要的，退出分割區程式，在 shell (<userinput
>tty2</userinput
>) 下按下 <keycap
>Alt</keycap
> 以及 <keycap
>F2</keycap
>，並且手動輸入您想使用的程式名稱(以及可能的參數)。然後跳過 <guimenuitem
>對硬碟進行分割</guimenuitem
> 步驟至 <command
>debian-installer</command
> ，並繼續進行下一步。 </para
><para
>如果您的 ide 磁碟上會超過 20 個分割區，您需要為 21 以上的分割區建立裝置檔案。除非有適當的裝置，否則下一步初始化分割區將失敗。比如說，這裡列舉了相關的命令，讓您可以在 <userinput
>tty2</userinput
> 中使用或者在執行一個介殼之後加入一個裝置檔案，令第 21 個分割區能夠被初始化。 <informalexample
><screen>
# cd /dev
# mknod hda21 b 3 21 
# chgrp disk hda21
# chmod 660 hda21
</screen
></informalexample
> 除非在目標系統上有合適的裝置名稱，否則啟動一個新安裝的系統將會失敗。在安裝完核心及模塊後，執行： <informalexample
><screen>
# cd /target/dev
# mknod hda21 b 3 21 
# chgrp disk hda21
# chmod 660 hda21
</screen
></informalexample
> <phrase arch="i386"
>記住將您的開機分割區標籤為 <quote
>Bootable</quote
>。</phrase
> </para
><para condition="mac-fdisk.txt"
>重點是當分割 Mac 類型磁碟時，置換分割區根據它的名字做確認﹔它必須被命名為 <quote
>swap</quote
>。所有的 Mac  Linux 分割區的類型都是 Apple_UNIX_SRV2 。請閱讀合適的手冊。我們通常建議閱讀 <ulink url="&url-mac-fdisk-tutorial;"
>mac-fdisk 使用指南</ulink
>，其中包括了如何同 MacOS 共享磁碟的步驟。 </para>


<!-- Start of file partitioning/partition/alpha.xml -->


  <sect2 arch="alpha"
><title
>為 &arch-title; 分割</title>
<para
>從 SRM 控制台啟動 Debian (唯一 &releasename; 支援的啟動方法)要求您的開機磁碟上有 BSD 磁碟標籤，而不是 MS-DOS 分割區。(注意， SRM 開機區塊不與 MS-DOS 分割區相容 &mdash; 請參閱 <xref linkend="alpha-firmware"/>。)因此，<command
>partman</command
> 在 &architecture; 上使用時會建立 BSD 磁碟標籤，如果您的磁碟上已經存在一個 DOS 分割區表，在 partman 將之轉換到磁碟標籤前需要將此分割區刪除。 </para
><para
>如果您選擇使用 <command
>fdisk</command
> 來分割您的磁碟，並且該磁碟上沒有 BSD 磁碟標籤，您必須使用 <quote
>b</quote
> 命令進入磁碟標籤模式。 </para
><para
>除非您想在 Tru64 Unix 或者一個 free 4.4BSD-Lite 衍生的作業系統下(FreeBSD, OpenBSD 或 NetBSD)使用這個磁碟，請 <emphasis
>不要</emphasis
> 建立包含整個磁碟的第三分割區。<command
>aboot</command
> 並不需要做這個動作，而且它可能導致一些麻煩，這是因為當用 <command
>swriteboot</command
> 工具在開機區段下安裝 <command
>aboot</command
> 時，分割區會被一個開機區塊覆蓋。 </para
><para
>同時因為 <command
>aboot</command
> 將被寫到磁碟前面的幾個區段(目前它佔用大約 70 KB 空間，或者 150 個區段)。您 <emphasis
>必須</emphasis
> 在磁碟一開始的地方留下足夠的空間。過去我們建議您在磁碟的開始處分出一個較小且未格式化的分割區。基於以上的理由，我們現在建議您這塊磁碟專門用於 GNU/Linux。當使用 <command
>partman</command
>，仍會建立一個小的分割區給 <command
>aboot</command
>，這樣一來較為方便。 </para
><para condition="FIXME"
>對於 ARC 的安裝來說，您應該在磁碟開始處建立一個小的 FAT 分區以放入 <command
>MILO</command
> 以及 <command
>linload.exe</command
> &mdash; 這至少需要 5 MB 空間，請參見 <xref linkend="non-debian-partitioning"/>。不幸地是，尚未支援從選單建立 FAT 檔案系統的方法，因此您必須在 Shell 下面手動使用 <command
>mkdosfs</command
> ，然後再嘗試安裝 boot loader 。 </para>
  </sect2>
<!--   End of file partitioning/partition/alpha.xml -->

<!-- Start of file partitioning/partition/hppa.xml -->


  <sect2 arch="hppa"
><title
>為 &arch-title; 分割</title>
<para
>PALO 是一個 HPPA 的 boot loader ，需要在磁碟前 2GB 中建立一個 <quote
>F0</quote
> 的分割區。這個分割區裡面放有 boot loader 以及可選的核心和 RAMdisk ，因此這個分區的大小最好夠大 &mdash; 至少需要 4 MB (我個人傾向於 8&mdash;16MB)。軔體的附加需求是 Linux 核心必須放在磁碟的前 2 GB 內，我們可以把根 ext2 分割區整個放在磁碟的前 2GB 內。或者您可以在磁碟前面建立一個小分割區，並且掛載到 <filename
>/boot</filename
>，因為這個目錄下面放置了 Linux 核心。<filename
>/boot</filename
> 必須夠大以便能放置任何你想載入的核心﹔一般來說 8&mdash;16MB 應該足夠。 </para>
  </sect2>
<!--   End of file partitioning/partition/hppa.xml -->

<!-- Start of file partitioning/partition/i386.xml -->


  <sect2 arch="i386"
><title
>為 &arch-title; 分割</title>
<para
>如果您已經有其他作業系統存在，像是 DOS 或 Windows，而且想在安裝 Debian 時保留它們，您需要重新設置分割區大小，以釋放更多的空間給 Debian 安裝。安裝程式支援重新修改 FAT 和 NTFS 檔案系統的大小﹔當您進行到安裝程式的分割區步驟，選擇手動分割後只需選擇該分割區，即可更改其大小。 </para
><para
>PC BIOS 一般會對磁碟分割區加入一些限制。比如說一個磁碟可以包含多少個 <quote
>主 (primry)</quote
> 和 <quote
>邏輯</quote
>分割區。在 1994&mdash;1998 年的 BIOS 裡， BIOS 能夠從什麼地方開機還受到限制。詳細資訊可以在 <ulink url="&url-partition-howto;"
>Linux Partition HOWTO</ulink
> 以及 <ulink url="&url-phoenix-bios-faq-large-disk;"
>Phoenix BIOS 常見問答集</ulink
>中找到。但是這一節會有一個簡單的介紹，來幫助在大部分情況下進行規劃。 </para
><para
><quote
>主</quote
> 分割區是 PC 磁碟上最原始的分割區方式。但是，每個磁碟只能有四個主分區。為了突破這個限制，發明了 <quote
>延伸 (extended)</quote
> 以及 <quote
> 邏輯 </quote
> 分割區。將一個主分割區設定為延伸分割區，您可以將之分成許多邏輯分割區。每個延伸分割區最多可切割成 60 個邏輯分割區﹔但是每個磁碟只能有一個延伸分割區。 </para
><para
>對於 SCSI 來說，Linux 限制每個磁碟最多有 15 個分割區( 3 個可用的主分割區，12 個邏輯分割區)。對於 IDE 來說可以有 63 個分割區( 3 個可用的主分割區， 60 個邏輯分割區)。但是通常 &debian; 系統只支持 20 個分割區裝置，因此您不能安裝超過 20 個的分割區，除非您先為這些分割區手動建立裝置檔案。 </para
><para
>如果您有一個很大的 IDE 磁碟，既沒有使用 LBA 定址，也沒有 overlay 驅動程式 (硬碟製造商有時候提供此功能)，那麼開機分割區 (含有您核心映像的分割區) 必須放置在硬碟第一個 1024 磁柱內。(在沒有 BIOS 轉換的情況下，大約有 524MB)。 </para
><para
>如果您的 BIOS 在 1995&mdash;1998 年之後出產(取決於製造商)且支援 <quote
>Enhanced Disk Drive Support Specification</quote
> 則不受限。 Lilo ， Linux Loader 以及 Debian 的替代方案 <command
>mbr</command
> 必須使用 BIOS 從磁碟讀取核心至記憶體。如果開啟 BIOS int 0x13 高容量硬碟的存取功能，則將被使用，否則合法的磁碟存取界面會拿來當備用方式，而且它不能定址任何大於 1023rd 磁柱的位置。一旦 Linux 啟動後，不管電腦的 BIOS 哪一種，這些限制將不再起任何作用，因為 Linux 不使用 BIOS 來存取硬碟。 </para
><para
>如果您有一個大硬碟，您也許必須使用磁柱轉換(cylinder translation)技術。它可以透過 BIOS 設定程式中設定，比如 LBA (Logical Block Addressing) 或者 CHS 轉換模式(<quote
>Large</quote
>)。關於大硬碟的各種議題討論可以在 <ulink url="&url-large-disk-howto;"
>Large Disk HOWTO</ulink
> 下找到。如果您正在使用一個磁柱轉換方案，而 BIOS 不支援高容量硬碟的存取，您的開機分割區必須放置在 <emphasis
>轉換後</emphasis
> 的 1024 磁柱內。 </para
><para
>解決這個問題的推薦方法，是在磁碟開始處建立一個小的( 5&mdash;10MB 就夠了)分割區來作為開機分割區。並且在其它地方建立其它的分區。這個開機分割區 <emphasis
>必須</emphasis
> 掛載至<filename
>/boot</filename
> 下，這是因為這是 Linux 核心放置的地方。這樣的設定可以在任意系統上運作正常，不管是使用 LBA 或者大硬碟 CHS 轉換，甚至也不管您的 BIOS 是否支援高容量硬碟的存取。 </para>
  </sect2>
<!--   End of file partitioning/partition/i386.xml -->

<!-- Start of file partitioning/partition/ia64.xml -->


  <sect2 arch="ia64"
><title
>為 &arch-title; 分割</title>

<para
><command
>partman</command
> 是安裝程式的預設分割工具。它管理一系列分割區以及掛載點，來保証磁碟和檔案系統的設定正確，才能安裝成功。實際上它式使用 <command
>parted</command
> 來進行磁碟分割的。 </para>

   <note>
   <title
>EFI 能夠識別的格式</title>
<para
>IA64 EFI 軔體支援 GPT 和 MS-DOS 兩種分割區表(或者磁碟標籤)格式。MS-DOS 格式通常用在 i386 PC 上，並且不適用在 IA64 系統上。儘管安裝程式提供了 <command
>cfdisk</command
>，您只需用 <ulink url="parted.txt"
> <command
>parted</command
></ulink
>，因為只有它能夠同時正確地管理 GPT 和 MS-DOS 分區表。 </para
></note>

<para
><command
>partman</command
> 自動分割區方案會分配一個 EFI 分割區作為磁碟上的第一個分割區。您也可以在主選單下選擇 <guimenuitem
>Guided partitioning</guimenuitem
> 建立分割區。其方法類似建立一個 <emphasis
>置換</emphasis
> 分割區。 </para
><para
><command
>partman</command
> 分割區工具將處理大部分的磁碟排列方式。對於那些需要手動設置磁碟的罕見例子，您可以按照上面方法採用 shell 並且直接執行 <command
>parted</command
> 工具下的命令列界面。若您想清除整個硬碟並且建立一個 GPT 分割區表以及一些分割區，可使用下面命令： <informalexample
><screen>
      mklabel gpt
      mkpartfs primary fat 0 50
      mkpartfs primary linux-swap 51 1000
      mkpartfs primary ext2 1001 3000
      set 1 boot on
      print
      quit
</screen
></informalexample
> 一個新的分割區表及三個分割區建立後，分別用做 EFI 開機分割區，置換空間以及一個根檔案系統。最後它建立了 EFI 分割區的開機標記。分割區以百萬位元組為單位，表示從磁碟開始起始和結束位置的偏移量。舉個例子，我們在磁碟開始處偏移量為 1001MB 的地方開始建立了一個 1999MB ext2 檔案系統。注意用 <command
>parted</command
> 格式化置換分割區可能要花一些時間來完成，因為它要掃瞄壞磁區。 </para>
  </sect2>

  <sect2 arch="ia64"
><title
> boot loader 分割區需求</title>

<para
>ELILO 是一種 ia64 boot loader 需要一個 FAT 檔案系統的分割區，且此分割區標記為 <userinput
>boot</userinput
>。分割區必須夠大以便能夠放入 boot loader，以及其他想啟動的核心以及 RAMdisks 。最小需要 20MB，但是如果您想執行多個核心的話，最好是 128MB 。 </para
><para
>因為 EFI Boot Manager 以及 EFI Shell 完全支援 GPT 表格所以開機分割區不一定需要是第一個分割區，甚至可以不在同個磁碟上。若你之前忘了分配分割區，這樣方便您在格式化磁碟上的其它分割區後再決定。<command
>partman</command
> 分割區程式將在設置 <emphasis
>root</emphasis
> 分割區時會同時檢查一個 EFI 分割區。這樣您就有機會在開始安裝套件之前檢查磁碟的排列方式。糾正這個問題的最簡單的方法，是在最後一個分割區末尾留下足夠的磁盤空間，來加入一個 EFI 分區。 </para
><para
>強烈建議您把 EFI 開機分割區和 <emphasis
>root</emphasis
> 檔案系統裝在同一個磁碟上。 </para>

  </sect2>

  <sect2 arch="ia64"
><title
>EFI 診斷分割區</title>

<para
>大多數 x86 PCs 上常見的 BIOS 來說，EFI 軔體明顯地複雜得多。一些系統製造商利用 EFI 的優點從硬碟檔案系統來存取檔案以及執行程式以儲存一些診斷訊息和 EFI 的系統管理工具。 在系統磁碟上存在一個另外 FAT 格式的檔案系統，請查閱相關的系統文檔和附件以獲得細節。建立一個診斷分割區的最容易的時刻是在設置 EFI 開機分割區的時候。 </para>

   </sect2>
<!--   End of file partitioning/partition/ia64.xml -->

<!-- Start of file partitioning/partition/mips.xml -->


  <sect2 arch="mips"
><title
>為 &arch-title; 分割</title>
<para
>SGI Indys 需要一個 SGI 磁碟標籤來確保系統能夠從硬碟上開機。它能夠在 fdisk expert menu 下建立。因此建立的 volume header (分割區號 9)至少要有 3MB 大。如果 volume header 建立的太小，您可以簡單的刪除分割區號 9 並且重新加入另外不同的尺寸。注意 volume header 必須從 0 號磁區開始。 </para>
  </sect2>
<!--   End of file partitioning/partition/mips.xml -->

<!-- Start of file partitioning/partition/powerpc.xml -->


  <sect2 arch="powerpc"
><title
>較新的 PowerMacs 分割區</title>
<para
>如果您在 NewWorld PowerMac 上安裝，您必須建立一個特殊的啟動分割區來存放 boot loader 。這個分割區大小必須是 800KB ，而且它的分割區類型必須是<emphasis
>Apple_Bootstrap</emphasis
>。如果啟動分割區的類型並非<emphasis
>Apple_Bootstrap</emphasis
>，則您的機器無法從硬碟開機。可以採用 <command
>partman</command
> 並將它用作 <quote
>NewWorld boot partition</quote
>，或在 <command
>mac-fdisk</command
> 使用 <userinput
>b</userinput
> 命令。 </para
><para
>特殊的分割區類型 Apple_Bootstrap 用來避免 MacOS 掛載並且毀壞此開機磁區，這是因為要使 OpenFirmware 能夠自動啟動 MacOS 需要對分割區做一些特殊修改。 </para
><para
>注意開機磁區只能存放三個非常小的檔案：<command
>yaboot</command
> 可執行檔，它的設定檔 <filename
>yaboot.conf</filename
>，以及第一級 OpenFirmware loader <command
>ofboot.b</command
>。它不需要且不能被您的檔案系統掛載，或者把核心或其它檔案複製到其中。<command
>ybin</command
> 和 <command
>mkofboot</command
> 工具可以用來管理這個分割區。 </para
><para
>為了確保 OpenFirmware 能夠自動啟動 &debian;，開機磁區必須位於硬碟上其他開機磁區之前，特別是 MacOS 開機磁區。開機分割區應該是您第一個建立的分割區。但是，如果您在之後新加入開機磁區，您可以使用 <command
>mac-fdisk</command
> 的 <userinput
>r</userinput
> 命令來重新調整分割區順序，如此一來開機磁區就可以在此之後順利使用(位於 1 號分割區)。請注意，這是邏輯順序而不是實際位址順序。 </para
><para
>Apple 磁碟通常有一些小的驅動分割區。如果您想同時使用 MacOSX 而採用雙開機方式，您應該保持這些分割區以及一個小的 HFS 分割區 (大小至少 800k)。這是因為 MacOSX 在每次啟動時，會初始化沒有任何啟用中的 MacOS 分割區及驅動分割區的磁盤。 </para>
  </sect2>
<!--   End of file partitioning/partition/powerpc.xml -->

<!-- Start of file partitioning/partition/sparc.xml -->


  <sect2 arch="sparc"
><title
>為 &arch-title; 分割</title>
<para
>確保在您的開機磁碟上建立了 <quote
>Sun 磁碟標籤</quote
> 。這是 OpenBoot PROM 唯一懂得的分割區方式，而且它是唯一能夠被開機分割區類型。可以在 <command
>fdisk</command
> 中使用<keycap
>s</keycap
> 鍵來建立 Sun 磁碟標籤。 </para
><para
>進一步來說，在 &arch-title; 磁碟裡，請確認您的開機磁碟的第一分割區是從 cylinder 0 開始。這是必須的，這意味著第一個分割區將含有分割區表以及開機區，它們通常在磁碟的前兩個磁區內。您一定 <emphasis
>不能</emphasis
> 設置開機磁碟的第一分割區為置換分割區，因為置換分割區並不能保留分割區前幾個磁區。您可以在那裡放置 Ext2 或者 UFS 分割區，它們將分割區表和開機磁區隔離開來。 </para
><para
>我們建議第三個分割區的類型應該是 <quote
>Whole disk</quote
>(type 5)，並且包含整個磁碟(從第一個磁柱至最後一個)，這是 Sun 磁碟標籤的慣例， 並且確保 <command
>SILO</command
> boot loader 工作良好。 </para>
  </sect2>
<!--   End of file partitioning/partition/sparc.xml -->

 </sect1>
<!--   End of file partitioning/partition-programs.xml -->

</appendix>
<!--   End of file partitioning/partitioning.xml -->
