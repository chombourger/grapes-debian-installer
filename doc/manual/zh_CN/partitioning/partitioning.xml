<!-- Start of file partitioning/partitioning.xml -->

<appendix id="partitioning">
<title
>为 Debian 准备分区</title>


<!-- Start of file partitioning/sizing.xml -->


 <sect1 id="partition-sizing">
 <title
>决定 Debian 分区以及大小</title>
<para
>最小化情况下，GNU/Linux 需要一个分区。您可以有一个包含整个操作系统，应用程序以及您私人数据的分区。大多数人感到一个分离的交换分区也是很有必要的，尽管它并非严格要求。<quote
>Swap</quote
> 是一个操作系统用的空白空间，允许系统使用磁盘来提供 <quote
>虚拟内存</quote
>。通过放置交换空间至一个分离的分区，Linux 可以非常有效地使用它。强迫 Linux 使用一个普通文件作为交换空间也是可行的，但是并不推荐这种做法。 </para
><para
>但是大多数人选择给 GNU/Linu 更多的分区。这里有两个原因使您愿意把系统放置到一些较小的分区上。第一个问题是安全性。如果文件系统出现了问题，一般来说只是一个分区会受到影响。因此，您只需要更换(来自于您小心维护的备份)一个分区。在原始最小化阶段，您应该考虑创建所谓的 <quote
>根分区</quote
>。它含有最基础的系统组件。如果其它分区出现了问题，您仍然可以引导至 GNU/Linux 来修复系统。这个可以让您不用从头重新安装系统。 </para
><para
>第二个理由对商业设置来说更重要，但它实际上取决于您机器的使用。比如，一个邮件服务器接受到很多垃圾邮件会很快填满一个分区，如果您创建 <filename
>/var/mail</filename
>在一个分离的分区上面，大多数系统在您得到太多垃圾邮件的情况下会继续工作。 </para
><para
>使用更多分区的唯一缺点很难知道您将来的需求。如果您建立了一个分区容量太小，则您将或者重装系统或者不停地移动数据来给分区分配空间。在另外一个方面，如果您建立的分区过大，您将浪费一些可以用在别的地方的空间。磁盘容量目前很便宜，但是为什么您要把金钱随意抛洒呢？ </para>
 </sect1>
<!--   End of file partitioning/sizing.xml -->

<!-- Start of file partitioning/tree.xml -->


 <sect1 id="directory-tree">
 <title
>目录树</title>
<para
>&debian; 依照 <ulink url="&url-fhs-home;"
>文件系统层次标准 (Filesystem Hierarchy Standard)</ulink
> 安排文件以及文件命名。这个标准允许用户以及软件程序预测文件以及目录的位置。根层次目录只是简单表现为 <filename
>/</filename
>。在根层次，所有的 Debian 系统包括这些目录： <informaltable
> <tgroup cols="2">
<thead>
<row>
  <entry
>目录</entry
><entry
>内容</entry>
</row>
</thead>

<tbody>
<row>
  <entry
><filename
>bin</filename
></entry>
  <entry
>基础命令执行文件</entry>
</row
><row>
  <entry
><filename
>boot</filename
></entry>
  <entry
>启动引导器的静态链结文件</entry>
</row
><row>
  <entry
><filename
>dev</filename
></entry>
  <entry
>设备文件</entry>
</row
><row>
  <entry
><filename
>etc</filename
></entry>
  <entry
>主机特定的系统配置</entry>
</row
><row>
  <entry
><filename
>home</filename
></entry>
  <entry
>用户活动目录</entry>
</row
><row>
  <entry
><filename
>lib</filename
></entry>
  <entry
>基本共享库以及内核模块</entry>
</row
><row>
  <entry
><filename
>media</filename
></entry>
  <entry
>包含移动介质的挂载点</entry>
</row
><row>
  <entry
><filename
>mnt</filename
></entry>
  <entry
>用于临时挂接一个文件系统</entry>
</row
><row>
  <entry
><filename
>proc</filename
></entry>
  <entry
>系统信息的虚拟目录(2.4 和 2.6 内核)</entry>
</row
><row>
  <entry
><filename
>root</filename
></entry>
  <entry
>根用户的活动目录</entry>
</row
><row>
  <entry
><filename
>sbin</filename
></entry>
  <entry
>基本的系统级程序</entry>
</row
><row>
  <entry
><filename
>sys</filename
></entry>
  <entry
>系统信息的虚拟目录(2.6 内核)</entry>
</row
><row>
  <entry
><filename
>tmp</filename
></entry>
  <entry
>临时文件</entry>
</row
><row>
  <entry
><filename
>usr</filename
></entry>
  <entry
>第二层次</entry>
</row
><row>
  <entry
><filename
>var</filename
></entry>
  <entry
>活动数据</entry>
</row
><row>
  <entry
><filename
>opt</filename
></entry>
  <entry
>附加的应用程序软件包</entry>
</row>
</tbody
></tgroup
></informaltable>
</para>

<para
>下面列出关于目录和分区的重要考虑。要注意磁盘的使用随系统配置和特定用途有很大变化。这里所推荐的是通用指引，提供一个分区的起点。 </para>
<itemizedlist>
<listitem
><para
>根分区 <filename
>/</filename
> 必须总是物理地包含 <filename
>/etc</filename
>，<filename
>/bin</filename
>，<filename
>/sbin</filename
>，<filename
>/lib</filename
> 以及 <filename
>/dev</filename
>，否则您将不能引导。典型的 root 分区需要 150&ndash;250MB 大小空间。 </para
></listitem>
<listitem
><para
><filename
>/usr</filename
>：包含所有的用户程序(<filename
>/usr/bin</filename
>)，库文件(<filename
>/usr/lib</filename
>)，文档(<filename
>/usr/share/doc</filename
>)，等等。这是文件系统需要最多的空间的部分。您需要提供至少 500MB 磁盘空间。总容量的增长依据您要安装的软件包数量和类型。大的工作站或服务器安装应该需要 4-6 GB。 </para
></listitem>
<listitem
><para
><filename
>/var</filename
>：所有的可变数据，如新的文章，电子邮件，网站，数据库，软件包系统的缓存等等，将被放置入这个目录。这个目录的大小取决于您对计算机的使用，但是对于大多数人来说将主要用在软件包系统的管理工具。如果您准备一次性地做一个完整的安装，包含 Debian 提供的所有程序，<filename
>/var</filename
> 下面 2 或 3GB 的空间应该满足需求。如果您准备逐次安装(也就是，安装服务程序和工具，然后是文本处理工具，然后是 X，...)，您可以在 <filename
>/var</filename
> 下准备 300&mdash;500 MB。如果硬盘空间很紧张，并且您不准备做主要的系统升级，您可以为 <filename
>/var</filename
> 配置 30-40MB 大小。 </para
></listitem>
<listitem
><para
><filename
>/tmp</filename
>: 程序创建的临时数据大都存到这个目录。通常 40&ndash;100 MB 应该足够。一些应用程序 &mdash; 包括档案处理器，CD/DVD 制作工具，和多媒体软件 &mdash; 可能会使用 <filename
>/tmp</filename
> 临时保存映像文件。如果您要使用这些程序，应该依据需要调整 <filename
>/tmp</filename
> 目录的大小。 </para
></listitem>
<listitem
><para
><filename
>/home</filename
>：每个用户将放置他的个人数据到这个目录的子目录下。其大小取决于有多少用户将使用系统和有什么文件放在他们的目录下。取决于您计划的使用量，您应该为每个用户准备 100MB 空间，不过这个值应该迎合您的需求。假如您的 home 目录计划保存大量的多媒体文件(MP3，电影)，您该预备更多的空间。 </para
></listitem>
</itemizedlist>

 </sect1>
<!--   End of file partitioning/tree.xml -->

<!-- Start of file partitioning/schemes.xml -->


 <sect1>
 <title
>推荐的分区方案</title>
<para
>对于新用户，个人 Debian 系统，家庭系统以及其它单用户配置来说，一个单一 <filename
>/</filename
> 分区(加上交换分区)可能是最容易的方案。但是如果您的分区大于6GB，请选择 ext3 作为您的分区类型。ext2 分区需要周期性的系统完整性检查并且当分区很大的时候，这个特性将导致引导期间的延迟。 </para
><para
>对于多用户系统或者有很多磁盘空间的系统，最好放置 <filename
>/usr</filename
>, <filename
>/var</filename
>, <filename
>/tmp</filename
>, 以及 <filename
>/home</filename
> 到每个他们自己的分区空间以和 <filename
>/</filename
> 分区分离开来。 </para
><para
>当您计划安装许多不是 Debian 分发版本的程序的时候，您也许需要运行一个独立的 <filename
>/usr/local</filename
> 分区。如果您的机器是一个小的邮件服务器，您也许需要为 <filename
>/var/mail</filename
> 建立一个独立的分区。通常情况下放置 <filename
>/tmp</filename
> 至它独立的分区，比如20至50MB是一个好主意。如果您正在配置一个服务器带有放多用户帐户，通常需要一个独立的大 <filename
>/home</filename
> 分区。一般来说，分区状况对每台计算机都有所不同，这取决于他们的用途。 </para
><para
>对于非常复杂的系统来说，您应该阅读 <ulink url="&url-multidisk-howto;"
> Multi Disk HOWTO</ulink
>。其中包含了很多对于 ISP 以及配置服务器的用户很有用的高级信息。 </para
><para
>在交换分区大小方面，这里有很多观点。我们的建议是使用和内存大小相同的交换分区。在大多数情况下它也应该不小于16MB。当然，这里有一些例外。如果您正在尝试在一个有 256MB 内存的机器上解决10000 个联立方程式，您也许需要 1G (或者更多)的交换分区。 </para
><para arch="m68k"
>在另外一个方面，Atari Falcons 以及 Macs 会对交换感到很痛苦，因此建立一个大的交换分区不如获得尽可能多的 RAM 。 </para
><para
>在 32 位体系结构(i386, m68k, 32位 SPARC 以及 PowerPC)下，最大尺寸的交换分区是 2GB。这应该基本满足任何安装情况。但是如果您的交换分区需求非常大，您应该尝试分离交换分区至不同磁盘中(这也叫做 <quote
>spindles</quote
> )，并且如果可能的话，不同的 SCSI 或者 IDE 通道。内核将在多个交换空间平衡用量来达到更好的性能。 </para
><para
>作为一个例子，在一个较老的家用机器上，可能具有 32MB 内存以及一个在 <filename
>/dev/hda</filename
> 上 1.7GB 的 IDE 驱动器。这里 <filename
>/dev/hda1</filename
> 上是一个 500MB 的分区用于其它操作系统，一个 32MB 交换分区在 <filename
>/dev/hda3</filename
>，以及一个 1.2GB 分区 <filename
>/dev/hda2</filename
> 用于 Linux 分区。 </para
><para
>对于不同任务所需要多大的空间的概念，您也许对于安装系统后加入的安装感兴趣，请检查 <xref linkend="tasksel-size-list"/>。 </para>

 </sect1>
<!--   End of file partitioning/schemes.xml -->

<!-- Start of file partitioning/device-names.xml -->


 <sect1 id="device-names">
 <title
>Linux 里面的设备名称</title>
<para
>Linux 磁盘以及分区名称可能和其它的操作系统有所不同。您需要知道 Linux 用于创建以及挂接分区的设备名称。这里是基本的命名方案： </para>
<itemizedlist arch="not-s390">
<listitem
><para
>第一个软盘驱动器被命名为 <filename
>/dev/fd0</filename
>。 </para
></listitem>
<listitem
><para
>第二个软盘驱动器被命名为 <filename
>/dev/fd1</filename
>。 </para
></listitem>
<listitem
><para
>第一个 SCSI 驱动器 (SCSI ID 反向地址) 被命名为 <filename
>/dev/sda</filename
>。 </para
></listitem>
<listitem
><para
>第二个 SCSI 驱动器 (反向地址) 被命名为 <filename
>/dev/sdb</filename
>，等等。 </para
></listitem>
<listitem
><para
>第一个 SCSI 光盘驱动器被命名为 <filename
>/dev/scd0</filename
>，也叫 <filename
>/dev/sr0</filename
>。 </para
></listitem>
<listitem
><para
>主 IDE 驱动器下的主磁盘被命名为 <filename
>/dev/hda</filename
>。 </para
></listitem>
<listitem
><para
>第二个控制器的主磁盘和从磁盘会分别被叫做 <filename
>/dev/hdb</filename
>。 </para
></listitem>
<listitem
><para
>第二个控制器的主磁盘和从磁盘会分别被叫做 <filename
>/dev/hdc</filename
> 以及 <filename
>/dev/hdd</filename
>，较新的 IDE 控制器实际上有两个通道，扮演着两个控制器的角色。<phrase arch="m68k"
> 字母可能和 mac 程序 pdisk 显示有所不同。(在 pdisk 上的 <filename
>/dev/hdc</filename
> 可能在 Debian 中显示为 <filename
>/dev/hda</filename
>)。</phrase
> </para
></listitem>

<listitem arch="i386"
><para
>第一个 XT 磁盘会被命名为 <filename
>/dev/xda</filename
>。 </para
></listitem>
<listitem arch="i386"
><para
>第二个 XT 磁盘会被命名为 <filename
>/dev/xdb</filename
>。 </para
></listitem>
<listitem arch="m68k"
><para
>第一个 ACSI 设备被命名为 <filename
>/dev/ada</filename
> ，第二个则是 <filename
>/dev/adb</filename
>。 </para
></listitem>
</itemizedlist>

<itemizedlist arch="s390">
<listitem
><para
>第一个 DASD 设备被命名为 <filename
>/dev/dasda</filename
>。 </para
></listitem>
<listitem
><para
>第二个 DASD 设备被命名为 <filename
>/dev/dasdb</filename
>，等等。 </para
></listitem>
</itemizedlist>

<para arch="not-s390"
>每个磁盘的分区名的显示，是通过在磁盘名称后面附加一个十进制数字： <filename
>sda1</filename
> 以及 <filename
>sda2</filename
> 表示您系统里第一个 SCSI 磁盘驱动器的第一个和第二个分区。 </para
><para arch="not-s390"
>这里有一个具体的例子。假设您有一个系统带有两个 SCSI 磁盘，一个 SCSI 地址是 2 并且另外一个地址是 4。第一个磁盘(在 2 上)会被命名为 <filename
>sda</filename
>并且第二个是 <filename
>sdb</filename
>。如果 <filename
>sda</filename
> 驱动器有 3 个分区，它们将被命名为 <filename
>sda1</filename
>，<filename
>sda2</filename
>，以及 <filename
>sda3</filename
>。这同样适合 <filename
>sdb</filename
> 及其分区。 </para
><para arch="not-s390"
>注意如果您有两个 SCSI 主机总线适配器(控制器)，设备的顺序可能会比较混乱。最好的解决方案是观察引导信息，假设您知道驱动器模式以及/或者容量。 </para
><para arch="i386"
>Linux 表示主分区为您的驱动器名称加上数字 1 到 4。例如，在第一个 IDE 驱动器上的第一个主分区是 <filename
>/dev/hda1</filename
>。逻辑驱动器将会从数字 5 开始，因此在相同驱动器上的第一个逻辑驱动器是 <filename
>/dev/hda5</filename
>。记住扩展分区，也就是含有逻辑驱动器的主分区本身将不可用。这个规则对 SCSI 也同样适用。 </para
><para arch="m68k"
>VMEbus 系统使用的 TEAC FC-1 SCSI 软盘驱动器将被看成正常的 SCSI 磁盘。为了让驱动器辨认更强容易安装软件将创建一个符号链接至合适的设备并且称为 <filename
>/dev/sfd0</filename
>。 </para
><para arch="sparc"
>Sun 磁盘分区允许8个独立的分区(或者片)。第三个分区通常是(一般也被建议设置为)<quote
>Whole Disk</quote
>分区。这个分区代表磁盘上所有的扇区，并且将被启动引导器(SILO 或者 SUN 的)使用。 </para
><para arch="s390"
>每个磁盘的分区名的显示，是通过在磁盘名称后面附加一个十进制数字： <filename
>dasda1</filename
> 以及 <filename
>dasda2</filename
> 表示您系统上第一个 DASD 设备的第一个以及第二个分区。 </para>
 </sect1>
<!--   End of file partitioning/device-names.xml -->

<!-- Start of file partitioning/partition-programs.xml -->

 <sect1 id="partition-programs">
 <title
>Debian 分区程序</title>
<para
>Debian 开发人员配置了几种在不同硬盘和不同体系结构上的分区程序。下面是一个适合您的结构的程序列表。 </para>

<variablelist>

<varlistentry>
<term
><command
>partman</command
></term>
<listitem
><para
>推荐的 Debian 分区工具。这个小而全的工具可以修改分区大小，创建文件系统 <phrase arch="i386"
>(在 Windows 下的说法是 <quote
>format</quote
>)</phrase
> 以及联系分区至挂接点。 </para
></listitem>
</varlistentry>

<varlistentry condition="fdisk.txt">
<term
><command
>fdisk</command
></term>
<listitem
><para
>原始版本的 Linux 磁盘分区工具，对于高手很好用。 </para
><para
>这里注意，如果您的机器上有一个 FreeBSD 分区。安装内核将包括这些分区的支持，但是 <command
>fdisk</command
> 表示他们的设备名称方式可能有所不同(也可能不是)。请参照 <ulink url="&url-linux-freebsd;"
>Linux+FreeBSD HOWTO</ulink
> </para
></listitem>
</varlistentry>

<varlistentry condition="cfdisk.txt">
<term
><command
>cfdisk</command
></term>
<listitem
><para
>一个简单易用，给其它人使用的是全屏幕磁盘分区程序。 </para
><para
>请注意 <command
>cfdisk</command
> 完全不了解 FreeBSD 的分区，因此，再一次设备名称可能最后有所不同。 </para
></listitem>
</varlistentry>

<varlistentry condition="atari-fdisk.txt">
<term
><command
>atari-fdisk</command
></term>
<listitem
><para
>Atari 版本的 <command
>fdisk</command
>。 </para
></listitem>
</varlistentry>

<varlistentry condition="amiga-fdisk.txt">
<term
><command
>amiga-fdisk</command
></term>
<listitem
><para
>Amiga-aware 版本的 <command
>fdisk</command
>。 </para
></listitem>
</varlistentry>

<varlistentry condition="mac-fdisk.txt">
<term
><command
>mac-fdisk</command
></term>
<listitem
><para
>Mac-aware 版本的 <command
>fdisk</command
>。 </para
></listitem>
</varlistentry>

<varlistentry condition="pmac-fdisk.txt">
<term
><command
>pmac-fdisk</command
></term>
<listitem
><para
>PowerMac 的 <command
>fdisk</command
>版本，同时也用于 BVM 以及 Motorola VMEbus 系统。 </para
></listitem>
</varlistentry>

<varlistentry condition="fdasd.txt">
<term
><command
>fdasd</command
></term>
<listitem
><para
>&arch-title; <command
>fdisk</command
> 的版本; 请阅读 <ulink url="fdasd.txt"
>fdasd 手册页</ulink
>或者 <ulink url="http://oss.software.ibm.com/developerworks/opensource/linux390/docu/l390dd08.pdf"
> Device Drivers and "
"Installation Commands</ulink
> 的第 13 章获得详细信息。 </para
></listitem>
</varlistentry>
</variablelist>

<para
>当您选择 <guimenuitem
>对硬盘进行分区</guimenuitem
> 时，程序之一将会运行。如果缺省运行的那个非您所希望，退出分区程序，在 shell (<userinput
>tty2</userinput
>) 下按下 <keycap
>Alt</keycap
> 以及 <keycap
>F2</keycap
>，并且手工输入您想使用的程序名称(以及可能的参数)。然后跳过 <guimenuitem
>对硬盘进行分区</guimenuitem
> 步骤至 <command
>debian-installer</command
> 并继续进行下一步。 </para
><para
>如果您的 ide 磁盘上会超过多过 20 个分区，您将需要为 21 以上的分区创建设备。除非有正确的设备存在，否则下一步初始化分区将失败。作为一个例子，这里列举了相关的命令，让您可以在 <userinput
>tty2</userinput
> 中使用或者在运行一个 Shell 下加入一个设备文件，令第 21 个的分区能够被初始化。<informalexample
><screen>
# cd /dev
# mknod hda21 b 3 21 
# chgrp disk hda21
# chmod 660 hda21
</screen
></informalexample
> 除非在目标系统上有合适的设备名称，否则引导一个新的系统将会失败。在安装完内核和模块以后，执行： <informalexample
><screen>
# cd /target/dev
# mknod hda21 b 3 21 
# chgrp disk hda21
# chmod 660 hda21
</screen
></informalexample
> <phrase arch="i386"
>记住标记您的引导分区为 <quote
>Bootable</quote
>。</phrase
> </para
><para condition="mac-fdisk.txt"
>为 Mac 类型磁盘分区的关键点是，交换分区是根据其名称确定的，它必须被命名为<quote
>swap</quote
>。所有的 Mac Linux 分区都是相同的 Apple_UNIX_SRV2 分区类型。请阅读合适的手册。我们还建议您阅读 <ulink url="&url-mac-fdisk-tutorial;"
>mac-fdisk Tutorial</ulink
>，其中包括了如何同 MacOS 共享磁盘的步骤。 </para>


<!-- Start of file partitioning/partition/alpha.xml -->


  <sect2 arch="alpha"
><title
>为 &arch-title; 准备分区</title>
<para
>从 SRM 控制台引导 Debian (唯一能被 &releasename; 支持的启动方法)要求您的启动盘上有 BSD 磁盘卷标，而不是 DOS 分区。(注意，SRM 引导块不和 MS-DOS 分区兼容 &mdash; 请参阅 <xref linkend="alpha-firmware"/>。)因此，<command
>partman</command
> 在 &architecture; 上运行时会创建 BSD 磁盘卷标，如果您的磁盘上已经存在一个 DOS 分区表，在 partman 转换到磁盘卷标前需要将它删除。 </para
><para
>如果您选择使用 <command
>fdisk</command
> 为您的磁盘分区，并且该磁盘上没有 BSD 磁盘卷标，您必须使用<quote
>b</quote
>命令进入磁盘卷标模式。 </para
><para
>除非您想在 Tru64 Unix 或者一个 free 4.4BSD-Lite 兼容的系统下(FreeBSD, OpenBSD 或 NetBSD)使用这个磁盘，请 <emphasis
>不要</emphasis
> 建立包含整个磁盘的第三方分区。<command
>aboot</command
> 并不需要这样，并且，它可能导致一些混乱，这是因为当用 <command
>swriteboot</command
> 工具在引导分区下安装时，<command
>aboot</command
> 将报怨引导扇区将被一个分区覆盖。 </para
><para
>同时，由于 <command
>aboot</command
> 将被写到磁盘的前面的几个扇区(目前它占用大约 70 KB 空间，或者 150 个扇区)。您 <emphasis
>必须</emphasis
> 在磁盘的开始处留下足够的空间。以前的方法建议您在磁盘的开始处分出一个较小并且不格式化的分区。基于上面的理由，我们现在建议您这块磁盘专门用于 GNU/Linux。当使用 <command
>partman</command
>，仍会建立一个小的分区给 <command
>aboot</command
>，这是习惯所致。 </para
><para condition="FIXME"
>对于 ARC 的安装来说，您应该在磁盘开始处建立一个小的 FAT 分区以便装入 <command
>MILO</command
> 以及 <command
>linload.exe</command
> &mdash; 至少需要 5 MB 空间，请参见 <xref linkend="non-debian-partitioning"/>。不幸地是，从菜单建立 FAT 文件系统的方法是不被支持的，因此您必须在 Shell 下面使用 <command
>mkdosfs</command
> 然后再尝试安装启动引导器。 </para>
  </sect2>
<!--   End of file partitioning/partition/alpha.xml -->

<!-- Start of file partitioning/partition/hppa.xml -->


  <sect2 arch="hppa"
><title
>为 &arch-title; 准备分区</title>
<para
>PALO 是一个 HPPA 的启动引导器。它需要在磁盘前 2GB 内得到一个 <quote
>F0</quote
> 分区。这个分区里面装有启动引导器以及可选的内核和内存虚拟磁盘。因此最好这个分区的大小应该符合这个要求 -- 至少需要 4 MB (我个人倾向于 8-16 MB)。固件的一个附加的要求是 Linux 内核必须在磁盘的前 2 GB 内。达到这一点要求需要把根 ext2 分区整个放在磁盘的头 2GB 内。或者您可以在磁盘前部创建一个小分区，并且被挂载到 <filename
>/boot</filename
>，然后在这个目录下面放置 Linux 内核。<filename
>/boot</filename
> 需要足够大以便能够放置入内核；8&ndash;16 MB 一般来说应该足够了。 </para>
  </sect2>
<!--   End of file partitioning/partition/hppa.xml -->

<!-- Start of file partitioning/partition/i386.xml -->


  <sect2 arch="i386"
><title
>为 &arch-title; 准备分区</title>
<para
>如果您已经有 DOS 或 Windows 这样的其他操作系统存在，并想在安装 Debian 时保留它们，您应该重新设置分区大小，释放更多的空间给 Debian 安装程序。安装程序支持 FAT 和 NTFS 文件系统的尺寸修改；当您走到安装程序的分区步骤，选择手动分区，只需选择该分区，并更改其尺寸。 </para
><para
>PC BIOS 一般会对磁盘分区加入一些约束。比如一个磁盘驱动可以含有多少个<quote
>主</quote
>分区和<quote
>逻辑</quote
>分区。在 1994$ndash;98 年的 BIOS 里，还有关于 BIOS 能够从什么地方引导的限制。详细的信息可以在 <ulink url="&url-partition-howto;"
>Linux Partition HOWTO</ulink
> 以及 <ulink url="&url-phoenix-bios-faq-large-disk;"
>Phoenix BIOS FAQ</ulink
> 中找到。但是这一节将包含一个简单的介绍，来帮助在大部分情况下进行规划。 </para
><para
><quote
>Primary</quote
> 分区是 PC 磁盘上最原始的分区方案。但是，每个磁盘只能含有四个主分区。为了突破这个限制，发明了 <quote
>拓展 (extended)</quote
> 以及 <quote
> 逻辑 </quote
> 分区。通过设置一个主分区为拓展分区，您可以把它相关的分区划分成逻辑分区。您最多可以为每个拓展分区分配多至 60 逻辑驱动器；但是每个磁盘您只能含有一个扩展分区。 </para
><para
>对于 SCSI 来说，Linux 限制每个驱动器最多有 15 个分区(3 个可用的主分区，12 个逻辑分区)。对于 IDE 来说可以有 63 个分区(3 个可用的主分区，60 个逻辑分区)。但是对于正常的 &debian; 版本来说，系统只支持 20 个分区设备，因此您可能不能安装超过 20 个的分区，除非您为这些首先手工创建了设备文件。 </para
><para
>如果您有一个巨大的 IDE 磁盘，并且既没有使用 LBA 寻址，也没有扩展驱动器(硬盘制造商有时候提供此功能)，那么引导分区(含有您内核映像的分区)必须放置在硬盘第一个 1024 柱面内。(在没有 BIOS 转换的情况下，大约有 524MB)。 </para
><para
>如果您的 BIOS 在 1995&ndash;98 年之后出现(取决于制造商)并且支持 <quote
>Enhanced Disk Drive Support Specification</quote
>，这个限制并不有效。Lilo 引导器和 Debian 的 <command
>mbr</command
> 都必须使用 BIOS 来从磁盘读取内核至内存。如果 BIOS int 0x13 大硬盘访问拓展被打开，则将被使用。否则会使用旧的传统磁盘访问界面，并且它不能找到任何大于 1023 的柱面。一旦 Linux 被引导后，不管您的计算机 BIOS 是什么，这些限制将不再起任何作用，因为 Linux 并不使用 BIOS 来进行磁盘寻址。 </para
><para
>如果您有一个大硬盘，您也许必须使用柱面转换(cylinder translation)技术。它可以在您的 BIOS 设置程序中打开，比如 LBA (Logical Block Addressing) 或者 CHS 转换模式(<quote
>Large</quote
>)。关于大硬盘的各种问题可以在 <ulink url="&url-large-disk-howto;"
>Large Disk HOWTO</ulink
> 下找到。如果您正在使用一个柱面转换方案，并且 BIOS 并不支持大硬盘访问拓展，您的引导分区必须放置在 <emphasis
>转换后</emphasis
> 的 1024 柱面内。 </para
><para
>解决这个问题的推荐方法，是在磁盘开始处创建一个小的(5-10MB 足矣)分区来作为引导分区。并且在其它地方创建其它的分区。这个引导分区 <emphasis
>必须</emphasis
>挂接至 <filename
>/boot</filename
> 下，这是因为它是 Linux 内核放置的地方。这样的配置将可以在任意系统上工作，不管 LBA 或者大硬盘 CHS 转换是否起作用，甚至也不管您的 BIOS 是否支持大硬盘访问扩展。 </para>
  </sect2>
<!--   End of file partitioning/partition/i386.xml -->

<!-- Start of file partitioning/partition/ia64.xml -->


  <sect2 arch="ia64"
><title
>为 &arch-title; 准备分区</title>

<para
><command
>partman</command
> 是安装程序的缺省分区工具。它管理一系列分区以及挂载点，来保证磁盘和文件系统对于成功的安装来说具有有合适的配置。实际上它使用的是 <command
>parted</command
> 来进行磁盘分区的。 </para>

   <note>
   <title
>EFI 能够识别的格式</title>
<para
>IA64 EFI 固件支持 GPT 和 MS-DOS 两种分区表(或者磁盘标记)格式。MS-DOS 格式通常用在 i386 PC 上，并且对于 IA64 系统来说并不合适推荐使用。尽管安装程序同时提供了 <command
>cfdisk</command
>，您应该只采用 <ulink url="parted.txt"
> <command
>parted</command
></ulink
>，因为只有它能够同时正确地管理 GPT 和 MS-DOS 分区表。 </para
></note>

<para
><command
>partman</command
> 自动分区方案会分配一个 EFI 分区作为磁盘上的第一个分区。您也可以在主菜单下选择 <guimenuitem
>Guided partitioning</guimenuitem
> 配置分区。其方法类似设置一个 <emphasis
>交换</emphasis
> 分区。 </para
><para
><command
>partman</command
> 分区工具将掌握大部分的磁盘布局。对于那些需要手工设置磁盘的罕见例子，您可以按照上面方法采用 shell 并且直接运行 <command
>parted</command
> 工具下的明令行界面。比如您想擦除您的整个硬盘并且创立一个 GPT 分区表以及一些分区，则可以才采用类似下面命令的方法： <informalexample
><screen>
      mklabel gpt
      mkpartfs primary fat 0 50
      mkpartfs primary linux-swap 51 1000
      mkpartfs primary ext2 1001 3000
      set 1 boot on
      print
      quit
</screen
></informalexample
> 这里创建了一个新的分区表，以及三个分区分别用做 EFI 引导分区，交换空间以及一个根文件系统。最后它设置了 EFI 分区的引导标记。分区将用兆字节，以及起始和结束位置到磁盘开始的偏移量来表示。因此，比如在上面我们在到磁盘开始处偏移量为 1001MB 的地方开始创建了一个 1999MB ext2 文件系统。注意采用 <command
>parted</command
> 格式化交换分区，可能要花一些时间来完成，因为它可能要扫描坏区。 </para>
  </sect2>

  <sect2 arch="ia64"
><title
>启动引导器分区要求</title>

<para
>ELILO 作为一种 ia64 启动引导器需要一个含有 FAT 文件系统的分区。且此分区标记为 <userinput
>boot</userinput
>。分区必须足够大以便能够放入启动引导器，您想引导的内核以及 RAMdisks 内存磁盘镜像。最小的尺寸大概有 20MB，但是如果您想使用多个内核的话，128MB 也许更好。 </para
><para
>因为 EFI Boot Manager 以及 EFI Shell 完全支持 GPT 表格所以引导分区不需要一定是第一个分区，甚至可以不在本地磁盘上。这样方便您在格式化磁盘上的其它分区后再决定。<command
>partman</command
> 分区程序将在设置 <emphasis
>root</emphasis
> 分区时会同时检查一个 EFI 分区。这样您就有机会在开始安装软件包之前检查磁盘的布局。纠正这个问题的最简单的方法，是在最后一个分区末尾留下足够的磁盘空间，来加入一个 EFI 分区。 </para
><para
>强烈建议您把 EFI 引导分区和 <emphasis
>root</emphasis
> 文件系统分配在同一个磁盘上。 </para>

  </sect2>

  <sect2 arch="ia64"
><title
>EFI 诊断分区</title>

<para
>对于在大多数 x86 PCs 上常见的 BIOS 来说，EFI 固件明显要复杂的多。一些系统制造商利用 EFI 的 优点从硬盘文件系统来访问文件以及运行程序以保存一些诊断信息和 EFI 的系统管理工具。这将在系统磁盘上存在一个分开的 FAT 文件系统。请查阅随机相关的系统文档和附件以获得细节。最轻松设置一个诊断分区的时候是在设置 EFI 引导分区的时候。 </para>

   </sect2>
<!--   End of file partitioning/partition/ia64.xml -->

<!-- Start of file partitioning/partition/mips.xml -->


  <sect2 arch="mips"
><title
>为 &arch-title; 准备分区</title>
<para
>SGI Indys 需要一个 SGI 磁盘标记来确保系统能够从硬盘上引导。它能够在 fdisk expert menu 下创建。因此创建的 volume header (分区号 9)应该有至少 3MB 大。但是为了能够保存各种不同的内核，我们推荐 10 MB 大小。如果 volume header 创建的太小，您可以简单的删除分区号 9 并且重新加入另外不同的尺寸。注意 volume header 必须从 0 号扇区开始。 </para>
  </sect2>
<!--   End of file partitioning/partition/mips.xml -->

<!-- Start of file partitioning/partition/powerpc.xml -->


  <sect2 arch="powerpc"
><title
>为较新的 PowerMacs 分区</title>
<para
>如果您正在一台 NewWorld PowerMac 上面安装，您必须创建一个特殊的启动分区来驻留启动引导器。这个分区的尺寸必须是 800KB 并且它的分区类型必须是 <emphasis
>Apple_Bootstrap</emphasis
>。如果启动分区并非 <emphasis
>Apple_Bootstrap</emphasis
> 类型则您的机器不能从硬盘上引导。可以采用 <command
>partman</command
> 并告诉它用它作为 <quote
>NewWorld boot partition</quote
>，或在 <command
>mac-fdisk</command
> 使用 <userinput
>b</userinput
> 命令。 </para
><para
>这里要求特殊的分区类型 Apple_Bootstrap 来阻止 MacOS 挂接以及处理启动分区。因为里面 含有一些特殊修改的模式来让 OpenFirmware 能够自动启动它。 </para
><para
>注意启动分区只含有三个非常小的文件：<command
>yaboot</command
> 可执行文件，它的配置文件 <filename
>yaboot.conf</filename
>，以及一个第一级 OpenFirmware 装载器 <command
>ofboot.b</command
>。它不需要，也一定不要被您的文件系统挂接，或者把内核以及其它文件放入在其中。<command
>ybin</command
> 和 <command
>mkofboot</command
> 工具可以用来维护这个分区。 </para
><para
>为了确保 OpenFirmware 能够自动引导 &debian; 启动分区应该先于其它磁盘上的引导分区，特别是 MacOS 引导分区。启动分区应该是您第一个创建的分区。但是，如果您在其它情况下后加入启动分区，您可以使用 <command
>mac-fdisk</command
> 的 <userinput
>r</userinput
> 命令来重新调整分区布局。这样启动分区就可以在随后时间内顺利使用 (它总是位于 1 号分区)。注意的是，这只是逻辑布局顺序而不是物理地址顺序。 </para
><para
>Apple 磁盘通常有一些小的驱动分区。如果您想和 MacOSX 一起使用而采用双引导，您应该保持这些分区以及一个小的 HFS 分区 (最少要求 800k)。这是因为 MacOSX 在每次启动的时候，会初始化没有任何激活的 MacOS 分区以及驱动分区的磁盘。 </para>
  </sect2>
<!--   End of file partitioning/partition/powerpc.xml -->

<!-- Start of file partitioning/partition/sparc.xml -->


  <sect2 arch="sparc"
><title
>为 &arch-title; 准备分区</title>
<para
>首先确保在您的引导磁盘上面创建有一个 <quote
>Sun 磁盘标记</quote
> 。这是 OpenBoot PROM 唯一懂得的分区方式，因此它是唯一能够被引导的分区类型。可以在 <keycap
>s</keycap
> 中用 <command
>fdisk</command
> 键来创建 Sun 磁盘标记。 </para
><para
>进一步来说，在 &arch-title; 磁盘里，请确定您的引导磁盘的第一分区是从 cylinder 0 开始的。在这里是必须的，这意味着第一个分区将含有分区表以及引导块。它们通常在磁盘的前两个扇区内。您必须 <emphasis
>not</emphasis
> 能设置引导磁盘的第一分区为交换分区，因为交换分区并不能保留分区前两个扇区。您可以放置 Ext2 或者 UFS 分区在那里；它们将隔离分区表和引导块。 </para
><para
>这里建议第三个分区应该是 <quote
>Whole disk</quote
>(type 5)，并且包含整个磁盘 (从第一个柱面至最后一个)，这是 Sun 磁盘格式的惯例，并且确保 <command
>SILO</command
> 启动引导器工作良好。 </para>
  </sect2>
<!--   End of file partitioning/partition/sparc.xml -->

 </sect1>
<!--   End of file partitioning/partition-programs.xml -->

</appendix>
<!--   End of file partitioning/partitioning.xml -->
