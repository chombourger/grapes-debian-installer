<!-- Start of file post-install/post-install.xml -->

<chapter id="post-install">
 <title
>Próximos Passos e Onde Ir a Partir Daqui</title>


<!-- Start of file post-install/new-to-unix.xml -->


 <sect1 id="unix-intro">
 <title
>Se Você é Novo em Unix</title>
<para
>Se você é novo em Unix, você provavelmente deve saír e comprar alguns livros e fazer algumas leituras. Muita informação valiosa pode também ser encontrada em <ulink url="&url-debian-reference;"
>Debian Reference</ulink
>. Esta <ulink url="&url-unix-faq;"
>lista de FAQs de Unix</ulink
> contém um número de documentos da UseNet que disponibilizam boas referências históricas. </para
><para
>O Linux é uma implementação de Unix. O <ulink url="&url-ldp;"
> Projecto de Documentação de Linux (LDP)</ulink
> junta inúmeros HOWTOs e livros online relacionados com Linux. A maioria destes documentos pode ser instalada localmente; basta que instale o pacote <classname
>doc-linux-html</classname
> (versão HTML) ou o pacote <classname
>doc-linux-text</classname
> (versão ASCII), e depois procure em <filename
>/usr/share/doc/HOWTO</filename
>. Versões internacionais dos HOWTOs LDP também estão disponíveis como pacotes Debian. </para>

 </sect1>
<!--   End of file post-install/new-to-unix.xml -->

<!-- Start of file post-install/orientation.xml -->


 <sect1 id="debian-orientation"
><title
>Oriente-se Para Debian</title>
<para
>O Debian é ligeiramente diferente das outras distribuições. Mesmo se está familiarizado com outras distribuições de Linux, há algumas coisas que deverá saber sobre Debian para o ajudar a manter o seu sistema limpo e eficiente. Este capítulo contém material para o orientar; não é intenção ser um tutorial sobre como usar Debian, mas apenas um breve piscar de olhos do sistema, para os muito apressados. </para>

  <sect2
><title
>Sistema de Pacotes Debian</title>
<para
>O conceito mais importante para realçar é o sistema de pacotes Debian. Na sua essência, grande parte do seu sistema deve ser consdiderado sob o controlo do sistema de pacotes. Incluem-se: <itemizedlist
> <listitem
><para
> <filename
>/usr</filename
> (excluindo <filename
>/usr/local</filename
>) </para
></listitem
> <listitem
><para
> <filename
>/var</filename
> (poderá fazer <filename
>/var/local</filename
> e ficar lá seguro) </para
></listitem
> <listitem
><para
> <filename
>/bin</filename
> </para
></listitem
> <listitem
><para
> <filename
>/sbin</filename
> </para
></listitem
> <listitem
><para
> <filename
>/lib</filename
> </para
></listitem
> </itemizedlist
> Por exemplo, se substituir <filename
>/usr/bin/perl</filename
>, isso irá funcionar, mas se fizer um upgrade ao seu pacote <classname
>perl</classname
> , o ficheiro que lá puser irá ser substituído. Utilizadores mais avançados poderão contornar isto, ao colocar pacotes como hold no <command
>aptitude</command
>. </para
><para
>Um dos melhores métodos de instalação é o apt. Pode usar a versão de linha de comandos <command
>apt-get</command
> ou a versão de texto em ecrã inteiro <application
>aptitude</application
>. Note que o apt deixa-lo-á fazer a junção de main, contrib e non-free, de forma a que possa ter pacotes com restrições de exports assim como versões standard. </para>
  </sect2>

  <sect2
><title
>Aplicação de Gestão de Versões</title>
<para
>Versões alternativas das aplicações são geridas por alternativas de actualização. Se está a manter múltiplas versões das suas aplicações, leia a página do manual update-alternatives. </para>
  </sect2>

  <sect2
><title
>Gestão dos Cron Jobs</title>
<para
>Quaisquer tarefas debaixo do âmbito do administrador do sistema, devem estar colocadas em <filename
>/etc</filename
>, uma vez que são ficheiros de configuração. Se tem um cron job para root, para correr diariamente, semanalmente, ou mensalmente, coloque-os em <filename
>/etc/cron.{daily,weekly,monthly}</filename
>. Estes serão invocados a partir de <filename
>/etc/crontab</filename
>, e correrão por ordem alfabética o que os serializa. </para
><para
>Por outro lado, se tem um cron job que (a) necessita de ser corrido como um utilizador especial ou, (b) necessita de escolher em determinada altura ou com determinada frequência, pode usar tanto <filename
>/etc/crontab</filename
>, ou, melhor ainda, <filename
>/etc/cron.d/whatever</filename
>. Estes ficheiros particulares também têm um campo extra que lhe permite estipular o utilizador que sob o qual o cron job corre. </para
><para
>Em qualquer um dos casos, basta editar os ficheiros e o cron irá notá-lo automaticamente. Não há necessidade de correr um comando especial. Para mais informação veja cron(8), crontab(5), e  <filename
>/usr/share/doc/cron/README.Debian</filename
>. </para>
  </sect2>
 </sect1>
<!--   End of file post-install/orientation.xml -->

<!-- Start of file post-install/reactivating-win.xml -->


 <sect1 arch="i386" id="reactivating-win">
 <title
>Reactivar o DOS e o Windows</title>
<para
>Após instalar o sistema base e escrever para o <emphasis
>Master Boot Record</emphasis
>, será capaz de arrancar para Linux, mas provavelmente nada mais. Isto depende do que escolheu durante a instalação. Este capítulo irá descrever como pode reactivar os seus antigos sistemas para que também possam arrancar do seu DOS ou Windows novamente. </para
><para
><command
>LILO</command
> é um gestor de arranque com o qual pode arrancar outros sistemas operativos para além do Linux, o que respeita a convenção dos PC. O gestor de boot é configurado através do ficheiro <filename
>/etc/lilo.conf</filename
> . Sempre que editar este ficheiro, terá de correr o comando <command
>lilo</command
> de seguida. A razão para tal é que a alteração apenas terá efeito quando reiniciar o programa. </para
><para
>Partes importantes do ficheiro <filename
>lilo.conf</filename
> são as linhas que contém as palavras-chave <userinput
>image</userinput
> e <userinput
>other</userinput
> , assim como as linhas que se seguem. Podem ser usadas para descrever o sistema que pode ser arrancado através do comando <command
>LILO</command
>. Tal sistema pode incluir um kernel (<userinput
>image</userinput
>), uma partição de root, parâmetros de kernel adicionais, etc. assim como uma configuração para arrancar outro, não Linux, (<userinput
>other</userinput
>) sistema operativo. Estas palavras-chave também poderão ser usadas mais do que uma vez. A ordenação destes sistemas dentro do ficheiro de configuração é importante, porque determina qual o sistema que arrancará automaticamente após, por exemplo, um timeout (<userinput
>delay</userinput
>) presumindo que o comando <command
>LILO</command
> não foi parado por pressionar a tecla <keycap
>shift</keycap
>. </para
><para
>Após uma instalação nova de Debian, apenas o sistema corrente está configurado para arrancar com o <command
>LILO</command
>. Se deseja correr outro kernel Linux, tem de editar o ficheiro de configuração <filename
>/etc/lilo.conf</filename
> para adicionar as seguintes linhas: <informalexample
><screen>
&additional-lilo-image;
</screen
></informalexample
> Para uma instalação básica apenas as duas primeiras linhas são necessárias. Se deseja saber mais acerca das outras duas opções, por favor, veja a documentação relativa ao <command
>LILO</command
> . Esta pode ser encontrada em <filename
>/usr/share/doc/lilo/</filename
>. O ficheiro que deverá ser lido é o <filename
>Manual.txt</filename
>. Para ter um começo rápido no mundo do arranque de sistemas, poderá também dar uma vista de olhos ás páginas do manual do <command
>LILO</command
> ou ao <filename
>lilo.conf</filename
> para uma ideia geral das palavras-chave de configurações e ao <filename
>lilo</filename
> para uma descrição da instalação da nova configuração no sector de arranque. </para
><para
>Note que há outros gestores de arranque disponíveis no &debian;, tais como GRUB (no pacote <classname
>grub</classname
>), CHOS (no pacote <classname
>chos</classname
>), Extended-IPL (no pacote <classname
>extipl</classname
> ), loadlin (no pacote <classname
>loadlin</classname
>) etc. </para>
 </sect1>
<!--   End of file post-install/reactivating-win.xml -->

<!-- Start of file post-install/further-reading.xml -->

 <sect1 id="further-reading"
><title
>Leitura e Informação Adicional</title>
<para
>Se necessita de informação sobre um programa em particular, deverá tentar primeiro o programa <userinput
>man <replaceable
>program</replaceable
></userinput
>, ou  <userinput
>info <replaceable
>program</replaceable
></userinput
>. </para
><para
>Há uma grande quantidade de informação útil em <filename
>/usr/share/doc</filename
>. Em particular, <filename
>/usr/share/doc/HOWTO</filename
> e <filename
>/usr/share/doc/FAQ</filename
> contêm grande quantidade de informação interessante. Para enviar bugs, veja o ficheiro <filename
>/usr/share/doc/debian/bug*</filename
>. Para ler sobre assuntos específicos de Debian relativos a determinados programas, veja o ficheiro <filename
>/usr/share/doc/(package name)/README.Debian</filename
>. </para
><para
>O <ulink url="http://www.debian.org/"
>website Debian</ulink
> contém uma grande quantidade de documentação acerca de Debian. Veja em particular o <ulink url="http://www.debian.org/doc/FAQ/"
>Debian FAQ</ulink
> e a <ulink url="http://www.debian.org/doc/user-manuals#quick-reference"
>Referência Debian</ulink
>. está disponível um índice com mais documentação Debian a partir do <ulink url="http://www.debian.org/doc/ddp"
>Debian Documentation Project</ulink
>. A comunidade Debian é auto-suportada; para subscrever uma ou mais mailing lists Debian, veja a página <ulink url="http://www.debian.org/MailingLists/subscribe"
> Mail List Subscription</ulink
>. E em último, mas não menos importante, <ulink url="http://lists.debian.org/"
>os arquivos das Mailing Lists Debian</ulink
> contém informação rica acerca de Debian. </para
><para
>Uma fonte genérica de informação sobre GNU/Linux é o <ulink url="http://www.tldp.org/"
>Projecto de Documentação Linux</ulink
>. Aí, irá encontrar HOWTOs e caminhos para outras informações valiosas sobre partes de um sistema GNU/Linux. </para>

 </sect1>
<!--   End of file post-install/further-reading.xml -->

<!-- Start of file post-install/kernel-baking.xml -->

 <sect1 id="kernel-baking"
><title
>Compilando um Novo Kernel</title>
<para
>Porque é que alguém irá querer compilar um novo kernel? Na grande maioria das vezes não é necessário uma vez que o kernel que vem por omissão com Debian funciona com a maioria das configurações. Além disso, normalmente Debian oferece vários kernels alternativos. Por isso poderá querer verificar se existe um pacote com uma imagem de kernel alternativa que melhor corresponda ao seu hardware. No entanto, poderá ser útil compilar um novo kernel, para: <itemizedlist>
<listitem
><para
>tratar de necessidades específicas em termos de hardware, ou conflitos do mesmo com os kernel pré-compilados </para
></listitem>
<listitem
><para
>usar opções do kernel que não são suportadas pelos kernels pré-fornecidos (tais como suporte para muita memória) </para
></listitem>
<listitem
><para
>optimizar o kernel removendo drivers inúteis para diminuir o tempo de arranque </para
></listitem>
<listitem
><para
>criar um kernel monolítico em vez de um kernel modular </para
></listitem>
<listitem
><para
>correr um kernel actualizado ou de desenvolvimento </para
></listitem>
<listitem
><para
>aprender mais averca de kernels linux </para
></listitem>
</itemizedlist>

</para>

  <sect2
><title
>Gestão das Imagens dos Kernel</title>
<para
>Não tenha medo de tentar compilar o kernel. É divertido e lucrativo. </para
><para
>Para compilar um kernel à maneira Debian, necessita de alguns pacotes: <classname
>fakeroot</classname
>, <classname
>kernel-package</classname
>, <phrase condition="classic-kpkg"
><classname
>kernel-source-&kernelversion;</classname
> (a versão mais recente na altura em que isto foi escrito)</phrase
> <phrase condition="common-kpkg"
><classname
>linux-source-2.6</classname
></phrase
> e mais alguns que provavelmente já estarão instalados (veja <filename
>/usr/share/doc/kernel-package/README.gz</filename
> para a lista completa). </para
><para
>Este método irá fazer um .deb da fonte do seu kernel, e, se tiver módulos não-standard, fazer igualmente um .deb dependente sincronizado. É a melhor maneira de gerir as imagens dos kernel; <filename
>/boot</filename
> irá guardar o kernel, o System.map e um log do ficheiro de configuração activo para a build. </para
><para
>Note que você não <emphasis
>tem</emphasis
> que compilar o seu kernel <quote
>à maneira Debian</quote
>; mas nós achamos que usar o sistema de pacotes para gerir o seu kernel é na verdade mais seguro e fácil. De facto, pode obter a fonte do kernel directamente de Linus, em vez de <phrase condition="classic-kpkg"
><classname
>kernel-source-&kernelversion;</classname
>,</phrase
> <phrase condition="common-kpkg"
><classname
>linux-source-2.6</classname
>,</phrase
> ainda assim use o método de compilação <classname
>kernel-package</classname
>. </para
><para
>Note que irá encontrar documentação completa utilizando <classname
>kernel-package</classname
> sob <filename
>/usr/share/doc/kernel-package</filename
>. Esta secção apenas contém um breve tutorial. </para
><para
>A partir de aqui, iremos assumir que tem as rédeas da sua máquina, e irá extrair o seu código-fonte do kernel para algum local dentro da sua directoria home<footnote
> <para
> Existem outras localizações para onde pode extrair as fontes dos kernel e construir o seu kernel personalizado, mas esta é a mais simples, uma vez que não requer permissões especiais. </para
> </footnote
>. Iremos também assumir que a sua versão do kernel é &kernelversion;. Assegure-se que está na directoria para onde deseja descompactar as fontes do kernel, extraia-as com <phrase condition="classic-kpkg"
><userinput
>tar xjf /usr/src/linux-source-&kernelversion;.tar.bz2</userinput
></phrase
> <phrase condition="common-kpkg"
><userinput
>tar xjf /usr/src/kernel-source-&kernelversion;.tar.bz2</userinput
></phrase
>e mude-se para o directório <phrase condition="classic-kpkg"
><filename
>kernel-source-&kernelversion;</filename
></phrase
> <phrase condition="common-kpkg"
><filename
>linux-source-&kernelversion;</filename
></phrase
> que terá sido criado. </para
><para
>Agora, pode configurar o seu kernel. Corra <userinput
>make xconfig</userinput
> se o seu X11 está instalado, configurado e a correr; corra <userinput
>make menuconfig</userinput
> caso contrário (irá necessitar da <classname
>libncurses5-dev</classname
> instalada). Dispense tempo para ler a ajuda online e escolher cuidadosamente as opções. Quando em dúvida, a melhor opção será incluir o gestor de periféricos (o software responsável por gerir os periféricos de hardware, tais como placas de rede - Ethernet -, controladores SCSI e mais) sobre o que está em dúvida. Tenha cuidado: outras opções, não relacionadas com hardware específico, devem ser deixadas com os valores pré-definidos se não compreender o que significam. Não se esqueça de seleccionar o <quote
>Kernel module loader</quote
> em <quote
>Loadable module support</quote
> (não está seleccionado de origem). Se não for incluído, a sua instalação Debian poderá vir a ter problemas. </para
><para
>Limpe a árvore da origem (source tree) e faça reset aos parâmetros do <classname
>kernel-package</classname
> . Para fazer isso, faça <userinput
>make-kpkg clean</userinput
>. </para
><para
>Agora, compile o kernel: <userinput
>fakeroot make-kpkg --revision=custom.1.0 kernel_image</userinput
>. O número da versão de <quote
>1.0</quote
> pode ser mudada à vontade; isto é apenas um número de versão que irá usar para manter registo das suas compilações. Da mesma forma, pode colocar qualquer palavra que deseje no lugar de <quote
>custom</quote
> (e.g., um  host name). A compilação do kernel poderá demorar um pouco, dependendo da capacidade da sua máquina. </para
><para condition="supports-pcmcia"
>Se necessitar de suporte PCMCIA, irá necessitar de instalar o pacote <classname
>pcmcia-source</classname
> . Extraia o ficheiro tar gzipped como root para a directoria <filename
>/usr/src</filename
> (é importante que os módulos sejam encontrados quando é suposto, nomeadamente, <filename
>/usr/src/modules</filename
>). Então, como root, faça <userinput
>make-kpkg modules_image</userinput
>. </para
><para
>Quando a compilação estiver completa, poderá instalar o seu kernel personalizado como qualquer pacote. Como root, faça <userinput
>dpkg -i ../kernel-image-&kernelversion;-<replaceable
>subarchitecture</replaceable
>_custom.1.0_&architecture;.deb</userinput
>. A parte <replaceable
>subarchitecture</replaceable
> é uma sub-arquitectura opcional, <phrase arch="i386"
> tal como <quote
>i586</quote
>, </phrase
> dependendo das opções de kernel que colocou. <userinput
>dpkg -i kernel-image...</userinput
> irá instalar o kernel, juntamente com alguns outros ficheiros de suporte. Por exemplo, o <filename
>System.map</filename
> irá ser instalado correctamente (ajuda a fazer debug de problemas no kernel), e <filename
>/boot/config-&kernelversion;</filename
> irá ser instalado, contendo a sua configuração actual. O seu novo pacote <classname
>kernel-image-&kernelversion;</classname
> é também suficiente esperto para automaticamente usar o gestor de arranque correcto para a sua plataforma, para realizar uma actualização no arranque, permitindo-o arrancar sem voltar a executar o gestor de arranque. Se criou um pacote de módulos, e.g., se tem PCMCIA, irá igualmente necessitar de instalar esse pacote. </para
><para
>É altura de re-iniciar o sistema; leia cuidadosamente qualquer aviso que o passo acima possa ter produzido, e de seguida faça <userinput
>shutdown -r now</userinput
>. </para
><para
><phrase condition="etch"
>Para mais informação sobre kernels Debian e compilação do kernel, veja a <ulink url="&url-kernel-handbook;"
>Debian Linux Kernel Handbook</ulink
>.</phrase
> Para mais informação acerca de <classname
>kernel-package</classname
>, leia ocumentação em <filename
>/usr/share/doc/kernel-package</filename
>. </para>
  </sect2>
 </sect1>
<!--   End of file post-install/kernel-baking.xml -->

<!-- Start of file post-install/rescue.xml -->

 <sect1 id="rescue" condition="etch">
 <title
>Recuperar um Sistema Estragado</title>
<para
>Por vezes, as coisas correm mal, e o sistema que você instalou cuidadosamente já não arranca. Talvez a configuração do carregador de arranque se tenha estragado enquanto experimentava uma alteração, ou talvez o novo kernel que você instalou não arranque, ou talvez raios cósmicos tenham atingido o seu disco rígido e tenham trocado um bit em <filename
>/sbin/init</filename
>. Seja qual for a causa, você precisa de um sistema que funcione enquanto você o compõe, e o modo de recuperação pode ser útil para isso. </para
><para
>Para aceder ao modo de recuperação, escreva <userinput
>rescue</userinput
> na prompt <prompt
>boot:</prompt
>, ou arranque com o parâmetro de arranque <userinput
>rescue/enable=true</userinput
>. Ser-lhe-ão mostrados os primeiros ecrãs do instalador, com uma nota no canto do seu monitor a indicar que este é o modo de recuperação, e não uma instalação completa. Não se preocupe, o seu sistema não está prestes a ser reescrito! O modo de recuperação apenas tira partido das capacidades de detecção de hardware disponíveis no instalador para se certificar que os seus discos, dispositivos de rede, e por aí fora estão disponíveis para si enquanro você repara o seu sistema. </para
><para
>Em vez da ferramenta de particionamento, deve ser-lhe apresentada uma lista das partições no seu sistema, e ser-lhe-à pedido que seleccione uma delas. Normalmente, você deverá escolher a partição que contém o sistema de ficheiros raiz que você necessita reparar. Você pode escolher partições em dispositivos RAID e LVM assim como as criadas directamente nos discos. </para
><para
>Se possível, o instalador irá agora apresentar-lhe uma prompt da shell no sistema de ficheiros que você seleccionou, o qual você pode utilizar para executar quaisquer reparações necessárias. <phrase arch="i386"
> Por exemplo, se você necessitar reinstalar o carregador de arranque GRUB no master boot record do primeiro disco, você pode introduzir o comando <userinput
>grub-install '(hd0)'</userinput
> para o fazer. </phrase
> </para
><para
>Se o instalador não conseguir correr uma shell utilizável no sistema de ficheiros raiz que você escolheu, talvez porque o sistema de ficheiros está corrompido, então irá lançar um aviso e oferecer-se para em vez disso dar-lhe uma shell no ambiente do instalador. Você poderá não ter tantos utilitários disponíveis neste ambiente, mas muitas vezes serão suficientes para reparar o seu sistema. O sistema de ficheiros raiz que você seleccionou será montado no directório <filename
>/target</filename
>. </para
><para
>Em qualquer dos casos, após você sair da shell, o sistema irá reiniciar. </para
><para
>Finalmente, note que reparar sistemas estragados pode ser dificil, e este manual não tenta desenvolver todas as coisas que podem ter corrido mal e como as corrigir. Se você tiver problemas, consulte um especialista. </para>
 </sect1>
<!--   End of file post-install/rescue.xml -->

</chapter>
<!--   End of file post-install/post-install.xml -->
